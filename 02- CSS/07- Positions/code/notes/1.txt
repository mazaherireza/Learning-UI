CSS Layout - The position Property
----------------------------------
... specifies the type of positioning method used for an element (static, relative, fixed, absolute or sticky).
Elements are then positioned using the top, bottom, left, and right properties. 
However, these properties will not work unless the position property is set first.

position: static;
HTML elements are positioned static by default.
Static positioned elements are not affected by the top, bottom, left, and right properties.

An element with position: static; is not positioned in any special way; 
it is always positioned according to the normal flow of the page <---------------- ***

position: relative;
An element with position: relative; is positioned relative to its normal position. <---------------- ***

Setting the top, right, bottom, and left properties of a relatively-positioned element 
will cause it to be adjusted away from its normal position. 
Other content will NOT be adjusted to fit into any gap left by the element. <---------------- ***

position: fixed;
An element with position: fixed; is positioned relative to the viewport, <---------------- ***
which means it always stays in the same place even if the page is scrolled. 

The top, right, bottom, and left properties are used to position the element.

A fixed element does not leave a gap in the page where it would normally have been located.

position: absolute;
An element with position: absolute; is positioned relative to the nearest positioned ancestor <---------------- ***

However; if an absolute positioned element has no positioned ancestors, 
it uses the document body, and moves along with page scrolling. <---------------- ***

Note: Absolute positioned elements are removed from the normal flow, and can overlap elements.

position: sticky;
An element with position: sticky; is positioned based on the user's scroll position. 

A sticky element toggles between relative and fixed, depending on the scroll position. <---------------- ***
It is positioned relative, until a given offset position is met in the viewport - then it "sticks" in place 
(like position: fixed).

...
You must also specify at least one of top, right, bottom or left for sticky positioning to work.

CSS inset Property
------------------
... sets the distance between an element and the parent element.
For this property to take effect it has to have the position property specified. <---------------- ***

The inset property is a shorthand property for the following properties:
top
bottom
left
right

....
If the inset property has three values:

inset: 15px 30px 60px;
top distance is 15px
left and right distances are 30px <---------------- ***
bottom distance is 60px